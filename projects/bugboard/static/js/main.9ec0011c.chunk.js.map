{"version":3,"sources":["constants/action-types.js","reducers/appTitle.js","reducers/products.js","reducers/productVersions.js","reducers/bugs.js","reducers/index.js","store.js","components/Header.jsx","containers/Header.jsx","selectors/products.js","selectors/productVersions.js","components/Navigation.jsx","containers/Navigation.jsx","containers/WithNavigation.jsx","api/products.js","api/productVersions.js","api/bugs.js","actions/fetchProducts.js","actions/fetchProductVersions.js","actions/fetchBugs.js","components/Spinner.jsx","components/NoInfoAlert.jsx","components/ErrorAlert.jsx","components/WithDynamicFetching.jsx","components/Product.jsx","components/ProductList.jsx","containers/ProductList.jsx","actions/changeAppTitle.js","components/ProductVersion.jsx","components/ProductVersionList.jsx","containers/ProductVersionList.jsx","components/Bug.jsx","components/BugList.jsx","containers/BugList.jsx","containers/Content.jsx","BugboardApp.jsx","index.js"],"names":["CHANGE_APP_TITLE_TO","FETCH_PRODUCTS","FETCH_PRODUCT_VERSIONS","FETCH_BUGS","appTitleReducer","state","action","type","initialState","isFetching","data","error","productsReducer","payload","productVersionsReducer","bugsReducer","createRootReducer","history","combineReducers","router","connectRouter","appTitle","products","productVersions","bugs","createBrowserHistory","composedEnhancer","composeWithDevTools","applyMiddleware","routerMiddleware","thunkMiddleware","store","createStore","rootReducer","Header","title","href","className","to","HeaderContainer","getProductTitle","id","product","find","getProductVersionTitle","versions","version","styles","activeBreadcrumb","color","pointerEvents","cursor","textDecoration","Navigation","breadcrumbs","aria-label","map","breadcrumb","style","isActive","connect","useParams","productId","versionId","push","withNavigation","WrappedComponent","WithNavigation","props","wrappedComponentProps","wrappedComponentName","displayName","name","Thenable","description","fetchProducts","dispatch","cb","fetchProductsSuccess","catch","fetchProductVersions","fetchBugs","fetchBugsSuccess","Spinner","NoInfoAlert","ErrorAlert","errorText","withDynamicFetching","WithDynamicFetching","dataListName","needToShowLoader","needToShowData","length","needToShowNoInfoAlert","needToShowErrorAlert","Product","changeAppTitleToProducts","useEffect","ProductVersion","changeAppTitleToVersions","Bug","bug","changeAppTitleToBugs","ProductListWithNavigation","ProductList","ProductVersionListWithNavigation","ProductVersionList","BugListWithNavigation","BugList","ContentContainer","useHistory","exact","path","document","Content","ReactDOM","render","StrictMode","getElementById"],"mappings":"mOAAaA,EACD,+BADCA,EAED,+BAFCA,EAGL,2BAGKC,EACD,0BADCA,EAEF,yBAFEA,EAGJ,uBAGIC,EACD,kCADCA,EAEF,iCAFEA,EAGJ,+BAGIC,EACD,sBADCA,EAEF,qBAFEA,EAGJ,mBCNMC,EAbS,WAAiC,IAAhCC,EAA+B,uDAAvB,WAAYC,EAAW,uCACtD,OAAQA,EAAOC,MACb,KAAKP,EACH,MAAO,WACT,KAAKA,EACH,MAAO,WACT,KAAKA,EACH,MAAO,OACT,QACE,OAAOK,I,OCTPG,EAAe,CACnBC,YAAY,EACZC,KAAM,GACNC,MAAO,IA2BMC,EAxBS,WAAmC,IAAlCP,EAAiC,uDAAzBG,EAAcF,EAAW,uCACxD,OAAQA,EAAOC,MACb,KAAKN,EACH,OAAO,2BACFI,GADL,IAEEI,YAAY,IAEhB,KAAKR,EACH,OAAO,2BACFI,GADL,IAEEI,YAAY,EACZC,KAAMJ,EAAOO,QAAQH,OAEzB,KAAKT,EACH,OAAO,2BACFI,GADL,IAEEI,YAAY,EACZE,MAAOL,EAAOO,QAAQF,QAE1B,QACE,OAAON,IC1BPG,EAAe,CACnBC,YAAY,EACZC,KAAM,GACNC,MAAO,IA2BMG,EAxBgB,WAAmC,IAAlCT,EAAiC,uDAAzBG,EAAcF,EAAW,uCAC/D,OAAQA,EAAOC,MACb,KAAKL,EACH,OAAO,2BACFG,GADL,IAEEI,YAAY,IAEhB,KAAKP,EACH,OAAO,2BACFG,GADL,IAEEI,YAAY,EACZC,KAAMJ,EAAOO,QAAQH,OAEzB,KAAKR,EACH,OAAO,2BACFG,GADL,IAEEI,YAAY,EACZE,MAAOL,EAAOO,QAAQF,QAE1B,QACE,OAAON,IC1BPG,EAAe,CACnBC,YAAY,EACZC,KAAM,GACNC,MAAO,IA2BMI,EAxBK,WAAmC,IAAlCV,EAAiC,uDAAzBG,EAAcF,EAAW,uCACpD,OAAQA,EAAOC,MACb,KAAKJ,EACH,OAAO,2BACFE,GADL,IAEEI,YAAY,IAEhB,KAAKN,EACH,OAAO,2BACFE,GADL,IAEEI,YAAY,EACZC,KAAMJ,EAAOO,QAAQH,OAEzB,KAAKP,EACH,OAAO,2BACFE,GADL,IAEEI,YAAY,EACZE,MAAOL,EAAOO,QAAQF,QAE1B,QACE,OAAON,ICZEW,EATW,SAACC,GAAD,OACxBC,0BAAgB,CACdC,OAAQC,YAAcH,GACtBI,WACAC,WACAC,kBACAC,UCNEP,EAAUQ,cAEVC,EAAmBC,8BACvBC,0BAAgBC,YAAiBZ,GAAUa,MAGvCC,EAAQC,sBAAYC,EAAYhB,GAAUS,G,gBCIjCQ,EAbA,SAAC,GAAD,IAAEC,EAAF,EAAEA,MAAOC,EAAT,EAASA,KAAT,OACb,wBAAQC,UAAU,YAAlB,SACE,cAAC,IAAD,CAAMA,UAAU,kCAAkCC,GAAIF,EAAtD,SACE,oBAAIC,UAAU,WAAd,SAA0BF,SCFjBI,EAFS,kBAAM,cAAC,EAAD,CAAQJ,MAAM,WAAWC,KAAK,O,OCHtDI,EAAkB,SAAClB,EAAUmB,GACjC,IAAMC,EAAUpB,EAASqB,MAAK,SAACD,GAAD,OAAaA,EAAQD,KAAOA,KAE1D,OAAQC,GAAWA,EAAQP,OAAU,ICHjCS,EAAyB,SAACC,EAAUJ,GACxC,IAAMK,EAAUD,EAASF,MAAK,SAACG,GAAD,OAAaA,EAAQL,KAAOA,KAE1D,OAAQK,GAAWA,EAAQX,OAAU,ICCjCY,EAAS,CACbC,iBAAkB,CAChBC,MAAO,UACPC,cAAe,OACfC,OAAQ,UACRC,eAAgB,SA2BLC,EAvBI,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAH,OACjB,qBAAKC,aAAW,aAAhB,SACE,oBAAIlB,UAAU,iBAAd,SACGiB,EAAYE,KAAI,SAACC,GAChB,OACE,oBAAIpB,UAAU,kBAAd,SACE,cAAC,IAAD,CACEC,GAAImB,EAAWrB,KACfsB,MAAOD,EAAWE,SAAWZ,EAAOC,iBAAmB,KAFzD,SAIGS,EAAWtB,SALqBsB,EAAWtB,eC6B3CyB,eALS,SAACvD,GAAD,MAAY,CAClCiB,SAAUjB,EAAMiB,SAASZ,KACzBmC,SAAUxC,EAAMkB,gBAAgBb,QAGnBkD,EAxCa,SAAC,GAA4B,IAA1BtC,EAAyB,EAAzBA,SAAUuB,EAAe,EAAfA,SAAe,EACrBgB,cAAzBC,EAD8C,EAC9CA,UAAWC,EADmC,EACnCA,UAEbT,EAAc,GAwBpB,OAtBAA,EAAYU,KAAK,CACf7B,MAAO,OACPC,KAAM,IACNuB,UAAWG,IAAcC,IAGvBD,GACFR,EAAYU,KAAK,CACf7B,MAAOK,EAAgBlB,EAAUwC,IAAc,WAC/C1B,KAAK,aAAD,OAAe0B,EAAf,aACJH,UAAWI,IAIXA,GACFT,EAAYU,KAAK,CACf7B,MAAOS,EAAuBC,EAAUkB,IAAc,OACtD3B,KAAK,aAAD,OAAe0B,EAAf,qBAAqCC,EAArC,SACJJ,UAAU,IAIP,cAAC,EAAD,CAAYL,YAAaA,OCGnBW,EAhCQ,SAACC,GACtB,IAAMC,EAAiB,SAACC,GACtB,IAAMC,EAAqB,eAAQD,GAGnC,cAFOC,EAAsBhD,SAG3B,qCACE,cAAC,EAAD,IACA,uBAAMgB,UAAU,YAAhB,UACE,6BAAK+B,EAAM/C,WACX,cAAC6C,EAAD,eAAsBG,WAMxBC,EACJJ,EAAiBK,aAAeL,EAAiBM,MAAQ,YAE3DL,EAAeI,YAAf,yBAA+CD,EAA/C,KAUA,OAAOV,aAJiB,SAACvD,GAAD,MAAY,CAClCgB,SAAUhB,EAAMgB,YAGXuC,CAAyBO,I,gBCzB5B7C,EAAW,CACf,CAAEmB,GAAI,IAAKN,MAAO,cAClB,CAAEM,GAAI,IAAKN,MAAO,cAClB,CAAEM,GAAI,IAAKN,MAAO,eAOdsC,E,0ICVA5B,EAAW,CACf,CAAEJ,GAAI,YAAaN,MAAO,aAC1B,CAAEM,GAAI,QAASN,MAAO,SACtB,CAAEM,GAAI,QAASN,MAAO,SACtB,CAAEM,GAAI,QAASN,MAAO,SACtB,CAAEM,GAAI,QAASN,MAAO,SACtB,CAAEM,GAAI,QAASN,MAAO,SACtB,CAAEM,GAAI,QAASN,MAAO,UAOlBsC,G,0ICZAjD,GAAO,CACX,CACEiB,GAAI,WACJiC,YACE,wJAEJ,CACEjC,GAAI,WACJiC,YACE,wJAEJ,CACEjC,GAAI,WACJiC,YACE,oSAEJ,CACEjC,GAAI,WACJiC,YACE,oSAEJ,CACEjC,GAAI,WACJiC,YACE,yJAQAD,G,0ICdSE,GARO,kBAAM,SAACC,GHLrB,IAACC,EGMPD,EAnBmC,CACnCrE,KAAMN,KHYC4E,EGSC,SAACvD,GAAD,OAAcsD,EAlBK,SAACtD,GAAD,MAAe,CAC1Cf,KAAMN,EACNY,QAAS,CACPH,KAAMY,IAeuBwD,CAAqBxD,KHTtC,IAAImD,EAASI,EAAGvD,KGU3ByD,OAAM,kBAAMH,EAZsB,CACrCrE,KAAMN,EACNY,QAAS,CACPF,MASyC,+BCG9BqE,GARc,SAAClB,GAAD,OAAe,SAACc,GHDrC,IAACC,EGEPD,EAnByC,CACzCrE,KAAML,KHgBC2E,EGKC,SAAChC,GAAD,OAAc+B,EAlBiC,CACvDrE,KAAML,EACNW,QAAS,CACPH,KAewDmC,MHL5C,IAAI4B,GAASI,EAAGhC,KGM3BkC,OAAM,kBAAMH,EAZ4B,CAC3CrE,KAAML,EACNW,QAAS,CACPF,MAS+C,+BCKpCsE,GAVG,SAACnB,EAAWC,GAAZ,OAA0B,SAACa,GHmBrC,IAACC,EGlBPD,EAnB+B,CAC/BrE,KAAMJ,KHoCC0E,EGfC,SAACrD,GAAD,OAAUoD,EAlBK,SAACpD,GAAD,MAAW,CAClCjB,KAAMJ,EACNU,QAAS,CACPH,KAAMc,IAemB0D,CAAiB1D,KHe9B,IAAIiD,GAASI,EAAGrD,MGd3BuD,OAAM,WACLH,EAb6B,CACjCrE,KAAMJ,EACNU,QAAS,CACPF,MAU0B,+BCrBfwE,GAJC,kBACd,mBAAG9C,UAAU,oBAAb,yBCGa+C,GAJK,kBAClB,mBAAG/C,UAAU,oBAAb,sBCQagD,GARI,SAAC,GAAD,IAAGC,EAAH,EAAGA,UAAH,OACjB,mBAAGjD,UAAU,qBAAb,SAAmCiD,KC0CtBC,GAxCa,SAACrB,GAC3B,IAAMsB,EAAsB,SAACpB,GAC3B,IAAM1D,EAAO0D,EAAMA,EAAMqB,cACjBhF,EAAsB2D,EAAtB3D,WAAYE,EAAUyD,EAAVzD,MAEd+E,EAAmBjF,EACnBkF,GAAkBlF,IAAeE,GAASD,EAAKkF,OAAS,EACxDC,GAAyBpF,IAAeE,GAAyB,IAAhBD,EAAKkF,OACtDE,IAAyBnF,EAEzB0D,EAAqB,eAAQD,GAMnC,cAJOC,EAAsBoB,oBACtBpB,EAAsB5D,kBACtB4D,EAAsB1D,MAG3B,qCACG+E,GAAoB,cAAC,GAAD,IACpBC,GAAkB,cAACzB,EAAD,eAAsBG,IACxCwB,GAAyB,cAAC,GAAD,IACzBC,GAAwB,cAAC,GAAD,CAAYR,UAAW3E,QAKhD2D,EACJJ,EAAiBK,aAAeL,EAAiBM,MAAQ,YAU3D,OARAgB,EAAoBjB,YAApB,8BAAyDD,EAAzD,KAQOkB,GC1BMO,GAbC,SAAC,GAAD,IAAG5D,EAAH,EAAGA,MAAOC,EAAV,EAAUA,KAAV,OACd,oBAAIC,UAAU,kBAAd,SACE,cAAC,IAAD,CAAMA,UAAU,eAAeC,GAAIF,EAAnC,SACGD,OCSQoD,OAXK,SAAC,GAAD,IAAGjE,EAAH,EAAGA,SAAH,OAClB,oBAAIe,UAAU,8BAAd,SACGf,EAASkC,KAAI,SAACd,GAAD,OACZ,cAAC,GAAD,CAA0BP,MAAOO,EAAQP,MAAOC,KAAMM,EAAQN,MAAhDM,EAAQD,YC2CbmB,gBAXS,SAACvD,GAAD,MAAY,CAClCiB,SAAUjB,EAAMiB,SAASZ,KACzBD,WAAYJ,EAAMiB,SAASb,WAC3BE,MAAON,EAAMiB,SAASX,UAGG,SAACiE,GAAD,MAAe,CACxCoB,yBAA0B,kBAAMpB,EC7Ca,CAC7CrE,KAAMP,KD6CN2E,cAAe,kBAAMC,EAASD,UAGjBf,EA7Cc,SAAC,GAMvB,IALLoC,EAKI,EALJA,yBACArB,EAII,EAJJA,cACArD,EAGI,EAHJA,SACAb,EAEI,EAFJA,WACAE,EACI,EADJA,MAWA,OARAsF,qBAAU,kBAAMD,MAA4B,IAC5CC,qBAAU,kBAAMtB,MAAiB,IAEjCrD,EAAWA,EAASkC,KAAI,SAACd,GAEvB,OADAA,EAAQN,KAAR,oBAA4BM,EAAQD,GAApC,aACOC,KAIP,cAAC,GAAD,CACE+C,aAAa,WACbnE,SAAUA,EACVb,WAAYA,EACZE,MAAOA,OEVEuF,GAbQ,SAAC,GAAD,IAAG/D,EAAH,EAAGA,MAAOC,EAAV,EAAUA,KAAV,OACrB,oBAAIC,UAAU,kBAAd,SACE,cAAC,IAAD,CAAMA,UAAU,eAAeC,GAAIF,EAAnC,SACGD,OCcQoD,OAhBY,SAAC,GAAD,IAAG1C,EAAH,EAAGA,SAAH,OACzB,oBAAIR,UAAU,8BAAd,SACGQ,EAASW,KAAI,SAACV,GAAD,OACZ,cAAC,GAAD,CAEEX,MAAOW,EAAQX,MACfC,KAAMU,EAAQV,MAFTU,EAAQL,YC8CNmB,gBAZS,SAACvD,GAAD,MAAY,CAClCwC,SAAUxC,EAAMkB,gBAAgBb,KAChCD,WAAYJ,EAAMkB,gBAAgBd,WAClCE,MAAON,EAAMkB,gBAAgBZ,UAGJ,SAACiE,GAAD,MAAe,CACxCuB,yBAA0B,kBAAMvB,EH5Ca,CAC7CrE,KAAMP,KG4CNgF,qBAAsB,SAAClB,GAAD,OACpBc,EAASI,GAAqBlB,QAGnBF,EAhDqB,SAAC,GAM9B,IALLuC,EAKI,EALJA,yBACAnB,EAII,EAJJA,qBACAnC,EAGI,EAHJA,SACApC,EAEI,EAFJA,WACAE,EACI,EADJA,MAEQmD,EAAcD,cAAdC,UAWR,OARAmC,qBAAU,kBAAME,MAA4B,IAC5CF,qBAAU,kBAAMjB,EAAqBlB,KAAY,CAACA,IAElDjB,EAAWA,EAASW,KAAI,SAACV,GAEvB,OADAA,EAAQV,KAAR,oBAA4B0B,EAA5B,qBAAkDhB,EAAQL,GAA1D,SACOK,KAIP,cAAC,GAAD,CACE2C,aAAa,WACb5C,SAAUA,EACVpC,WAAYA,EACZE,MAAOA,OCfEyF,GAZH,SAAC,GAAD,IAAGjE,EAAH,EAAGA,MAAOuC,EAAV,EAAUA,YAAV,OACV,qBAAIrC,UAAU,kBAAd,UACE,6BAAKF,IACL,4BAAIuC,QCWOa,OAZC,SAAC,GAAD,IAAG/D,EAAH,EAAGA,KAAH,OACd,oBAAIa,UAAU,8BAAd,SACGb,EAAKgC,KAAI,SAAC6C,GAAD,OACR,cAAC,GAAD,CAAkBlE,MAAOkE,EAAI5D,GAAIiC,YAAa2B,EAAI3B,aAAxC2B,EAAI5D,YC0CLmB,gBAZS,SAACvD,GAAD,MAAY,CAClCmB,KAAMnB,EAAMmB,KAAKd,KACjBD,WAAYJ,EAAMmB,KAAKf,WACvBE,MAAON,EAAMmB,KAAKb,UAGO,SAACiE,GAAD,MAAe,CACxC0B,qBAAsB,kBAAM1B,ENnCa,CACzCrE,KAAMP,KMmCNiF,UAAW,SAACnB,EAAWC,GAAZ,OACTa,EAASK,GAAUnB,EAAWC,QAGnBH,EA3CU,SAAC,GAMnB,IALL0C,EAKI,EALJA,qBACArB,EAII,EAJJA,UACAzD,EAGI,EAHJA,KACAf,EAEI,EAFJA,WACAE,EACI,EADJA,MACI,EAC6BkD,cAAzBC,EADJ,EACIA,UAAWC,EADf,EACeA,UAMnB,OAHAkC,qBAAU,kBAAMK,MAAwB,IACxCL,qBAAU,kBAAMhB,EAAUnB,EAAWC,KAAY,CAACD,EAAWC,IAG3D,cAAC,GAAD,CACE0B,aAAa,OACbjE,KAAMA,EACNf,WAAYA,EACZE,MAAOA,OClBP4F,GAA4BtC,EAAeuC,IAC3CC,GAAmCxC,EAAeyC,IAClDC,GAAwB1C,EAAe2C,IA0B9BC,GAxBU,WACvB,IAAM5F,EAAU6F,cAKhB,OAFAb,qBAAU,kBAAMhF,EAAQ+C,KAAK,OAAM,IAGjC,eAAC,IAAD,WACE,cAAC,IAAD,CAAO+C,OAAK,EAACC,KAAK,IAAlB,SACE,cAACT,GAAD,MAEF,cAAC,IAAD,CAAOQ,OAAK,EAACC,KAAK,gCAAlB,SACE,cAACP,GAAD,MAEF,cAAC,IAAD,CAAOM,OAAK,EAACC,KAAK,gDAAlB,SACE,cAACL,GAAD,MAEF,cAAC,IAAD,CAAOK,KAAK,IAAZ,SACE,cAAC,IAAD,CAAU1E,GAAG,YCJNsB,gBAJS,SAACvD,GAAD,MAAY,CAClCgB,SAAUhB,EAAMgB,YAGHuC,EAnBK,SAAC,GAAkB,IAAhBvC,EAAe,EAAfA,SAGrB,OAFA4E,qBAAU,kBAAOgB,SAAS9E,MAAQd,IAAW,CAACA,IAG5C,sBAAKgB,UAAU,YAAf,UACE,cAAC,EAAD,IACA,cAAC6E,GAAD,UCJNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAetF,MAAOA,EAAtB,SACE,cAAC,IAAD,CAAiBd,QAASA,EAA1B,SACE,cAAC,GAAD,UAINgG,SAASK,eAAe,W","file":"static/js/main.9ec0011c.chunk.js","sourcesContent":["export const CHANGE_APP_TITLE_TO = {\r\n  PRODUCTS: 'CHANGE_APP_TITLE_TO_PRODUCTS',\r\n  VERSIONS: 'CHANGE_APP_TITLE_TO_VERSIONS',\r\n  BUGS: 'CHANGE_APP_TITLE_TO_BUGS',\r\n}\r\n\r\nexport const FETCH_PRODUCTS = {\r\n  FETCHING: 'FETCH_PRODUCTS_FETCHING',\r\n  SUCCESS: 'FETCH_PRODUCTS_SUCCESS',\r\n  ERROR: 'FETCH_PRODUCTS_ERROR',\r\n}\r\n\r\nexport const FETCH_PRODUCT_VERSIONS = {\r\n  FETCHING: 'FETCH_PRODUCT_VERSIONS_FETCHING',\r\n  SUCCESS: 'FETCH_PRODUCT_VERSIONS_SUCCESS',\r\n  ERROR: 'FETCH_PRODUCT_VERSIONS_ERROR',\r\n}\r\n\r\nexport const FETCH_BUGS = {\r\n  FETCHING: 'FETCH_BUGS_FETCHING',\r\n  SUCCESS: 'FETCH_BUGS_SUCCESS',\r\n  ERROR: 'FETCH_BUGS_ERROR',\r\n}\r\n","import { CHANGE_APP_TITLE_TO } from '../constants/action-types'\r\n\r\nconst appTitleReducer = (state = 'Products', action) => {\r\n  switch (action.type) {\r\n    case CHANGE_APP_TITLE_TO.PRODUCTS:\r\n      return 'Products'\r\n    case CHANGE_APP_TITLE_TO.VERSIONS:\r\n      return 'Versions'\r\n    case CHANGE_APP_TITLE_TO.BUGS:\r\n      return 'Bugs'\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default appTitleReducer\r\n","import { FETCH_PRODUCTS } from '../constants/action-types'\r\n\r\nconst initialState = {\r\n  isFetching: false,\r\n  data: [],\r\n  error: '',\r\n}\r\n\r\nconst productsReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case FETCH_PRODUCTS.FETCHING:\r\n      return {\r\n        ...state,\r\n        isFetching: true,\r\n      }\r\n    case FETCH_PRODUCTS.SUCCESS:\r\n      return {\r\n        ...state,\r\n        isFetching: false,\r\n        data: action.payload.data,\r\n      }\r\n    case FETCH_PRODUCTS.ERROR:\r\n      return {\r\n        ...state,\r\n        isFetching: false,\r\n        error: action.payload.error,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default productsReducer\r\n","import { FETCH_PRODUCT_VERSIONS } from '../constants/action-types'\r\n\r\nconst initialState = {\r\n  isFetching: false,\r\n  data: [],\r\n  error: '',\r\n}\r\n\r\nconst productVersionsReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case FETCH_PRODUCT_VERSIONS.FETCHING:\r\n      return {\r\n        ...state,\r\n        isFetching: true,\r\n      }\r\n    case FETCH_PRODUCT_VERSIONS.SUCCESS:\r\n      return {\r\n        ...state,\r\n        isFetching: false,\r\n        data: action.payload.data,\r\n      }\r\n    case FETCH_PRODUCT_VERSIONS.ERROR:\r\n      return {\r\n        ...state,\r\n        isFetching: false,\r\n        error: action.payload.error,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default productVersionsReducer\r\n","import { FETCH_BUGS } from '../constants/action-types'\r\n\r\nconst initialState = {\r\n  isFetching: false,\r\n  data: [],\r\n  error: '',\r\n}\r\n\r\nconst bugsReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case FETCH_BUGS.FETCHING:\r\n      return {\r\n        ...state,\r\n        isFetching: true,\r\n      }\r\n    case FETCH_BUGS.SUCCESS:\r\n      return {\r\n        ...state,\r\n        isFetching: false,\r\n        data: action.payload.data,\r\n      }\r\n    case FETCH_BUGS.ERROR:\r\n      return {\r\n        ...state,\r\n        isFetching: false,\r\n        error: action.payload.error,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default bugsReducer\r\n","import { combineReducers } from 'redux'\r\nimport { connectRouter } from 'connected-react-router'\r\nimport appTitle from './appTitle'\r\nimport products from './products'\r\nimport productVersions from './productVersions'\r\nimport bugs from './bugs'\r\n\r\nconst createRootReducer = (history) =>\r\n  combineReducers({\r\n    router: connectRouter(history),\r\n    appTitle,\r\n    products,\r\n    productVersions,\r\n    bugs,\r\n  })\r\n\r\nexport default createRootReducer\r\n","import { createStore, applyMiddleware } from 'redux'\r\nimport { routerMiddleware } from 'connected-react-router'\r\nimport { createBrowserHistory } from 'history'\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport rootReducer from './reducers'\r\n\r\nconst history = createBrowserHistory()\r\n\r\nconst composedEnhancer = composeWithDevTools(\r\n  applyMiddleware(routerMiddleware(history), thunkMiddleware)\r\n)\r\n\r\nconst store = createStore(rootReducer(history), composedEnhancer)\r\n\r\nexport { history, store as default }\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Header = ({title, href}) => (\r\n  <header className='pt-2 pb-2'>\r\n    <Link className='nav-link d-inline text-dark p-0' to={href}>\r\n      <h1 className='d-inline'>{title}</h1>\r\n    </Link>\r\n  </header>\r\n)\r\n\r\nHeader.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  href: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport Header from '../components/Header'\r\n\r\nconst HeaderContainer = () => <Header title='Bugboard' href='/' />\r\n\r\nexport default HeaderContainer\r\n","const getProductTitle = (products, id) => {\r\n  const product = products.find((product) => product.id === id)\r\n\r\n  return (product && product.title) || ''\r\n}\r\n\r\nexport { getProductTitle }\r\n","const getProductVersionTitle = (versions, id) => {\r\n  const version = versions.find((version) => version.id === id)\r\n\r\n  return (version && version.title) || ''\r\n}\r\n\r\nexport { getProductVersionTitle }\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst styles = {\r\n  activeBreadcrumb: {\r\n    color: '#6c757d',\r\n    pointerEvents: 'none',\r\n    cursor: 'default',\r\n    textDecoration: 'none',\r\n  },\r\n}\r\n\r\nconst Navigation = ({ breadcrumbs }) => (\r\n  <nav aria-label='breadcrumb'>\r\n    <ol className='breadcrumb m-2'>\r\n      {breadcrumbs.map((breadcrumb) => {\r\n        return (\r\n          <li className='breadcrumb-item' key={breadcrumb.title}>\r\n            <Link\r\n              to={breadcrumb.href}\r\n              style={breadcrumb.isActive ? styles.activeBreadcrumb : null}\r\n            >\r\n              {breadcrumb.title}\r\n            </Link>\r\n          </li>\r\n        )\r\n      })}\r\n    </ol>\r\n  </nav>\r\n)\r\n\r\nNavigation.propTypes = {\r\n  breadcrumbs: PropTypes.array,\r\n}\r\n\r\nexport default Navigation\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { useParams } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { getProductTitle, getProductVersionTitle } from '../selectors'\r\nimport Navigation from '../components/Navigation'\r\n\r\nconst NavigationContainer = ({ products, versions }) => {\r\n  const { productId, versionId } = useParams()\r\n\r\n  const breadcrumbs = []\r\n\r\n  breadcrumbs.push({\r\n    title: 'Home',\r\n    href: '/',\r\n    isActive: !productId && !versionId,\r\n  })\r\n\r\n  if (productId) {\r\n    breadcrumbs.push({\r\n      title: getProductTitle(products, productId) || 'Versions',\r\n      href: `/products/${productId}/versions`,\r\n      isActive: !versionId,\r\n    })\r\n  }\r\n\r\n  if (versionId) {\r\n    breadcrumbs.push({\r\n      title: getProductVersionTitle(versions, versionId) || 'Bugs',\r\n      href: `/products/${productId}/versions/${versionId}/bugs`,\r\n      isActive: true,\r\n    })\r\n  }\r\n\r\n  return <Navigation breadcrumbs={breadcrumbs} />\r\n}\r\n\r\nNavigationContainer.propTypes = {\r\n  products: PropTypes.array.isRequired,\r\n  versions: PropTypes.array.isRequired,\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  products: state.products.data,\r\n  versions: state.productVersions.data,\r\n})\r\n\r\nexport default connect(mapStateToProps)(NavigationContainer)\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport Navigation from './Navigation'\r\n\r\nconst withNavigation = (WrappedComponent) => {\r\n  const WithNavigation = (props) => {\r\n    const wrappedComponentProps = { ...props }\r\n    delete wrappedComponentProps.appTitle\r\n\r\n    return (\r\n      <>\r\n        <Navigation />\r\n        <main className='container'>\r\n          <h2>{props.appTitle}</h2>\r\n          <WrappedComponent {...wrappedComponentProps} />\r\n        </main>\r\n      </>\r\n    )\r\n  }\r\n\r\n  const wrappedComponentName =\r\n    WrappedComponent.displayName || WrappedComponent.name || 'Component'\r\n\r\n  WithNavigation.displayName = `WithNavigation(${wrappedComponentName})`\r\n\r\n  WithNavigation.propTypes = {\r\n    appTitle: PropTypes.string.isRequired,\r\n  }\r\n\r\n  const mapStateToProps = (state) => ({\r\n    appTitle: state.appTitle,\r\n  })\r\n\r\n  return connect(mapStateToProps)(WithNavigation)\r\n}\r\n\r\nexport default withNavigation\r\n","// export const fetchProducts = () =>\r\n//   fetch('http://localhost:3004/products').then((res) => {\r\n//     if (!res.ok) {\r\n//       return Promise.reject(res)\r\n//     }\r\n\r\n//     return res.json()\r\n//   })\r\n\r\nconst products = [\r\n  { id: '1', title: 'Product #1' },\r\n  { id: '2', title: 'Product #2' },\r\n  { id: '3', title: 'Product #3' },\r\n]\r\n\r\nexport const fetchProducts = () => ({\r\n  then: (cb) => new Thenable(cb(products)),\r\n})\r\n\r\nclass Thenable {\r\n  then() {}\r\n  catch() {}\r\n}\r\n","// export const fetchProductVersions = (productId) =>\r\n//   fetch(`http://localhost:3004/products/${productId}/versions`).then((res) => {\r\n//     if (!res.ok) {\r\n//       return Promise.reject(res)\r\n//     }\r\n\r\n//     return res.json()\r\n//   })\r\n\r\nconst versions = [\r\n  { id: 'not_fixed', title: 'Not fixed' },\r\n  { id: '1_0_4', title: '1.0.4' },\r\n  { id: '1_0_3', title: '1.0.3' },\r\n  { id: '1_0_2', title: '1.0.2' },\r\n  { id: '1_0_1', title: '1.0.1' },\r\n  { id: '1_0_0', title: '1.0.0' },\r\n  { id: '0_1_0', title: '0.1.0' },\r\n]\r\n\r\nexport const fetchProductVersions = () => ({\r\n  then: (cb) => new Thenable(cb(versions)),\r\n})\r\n\r\nclass Thenable {\r\n  then() {}\r\n  catch() {}\r\n}\r\n","// export const fetchBugs = (productId, versionId) =>\r\n//   fetch(\r\n//     `http://localhost:3004/products/${productId}/versions/${versionId}/bugs`\r\n//   ).then((res) => {\r\n//     if (!res.ok) {\r\n//       return Promise.reject(res)\r\n//     }\r\n\r\n//     return res.json()\r\n//   })\r\n\r\nconst bugs = [\r\n  {\r\n    id: 'bug-0001',\r\n    description:\r\n      'Lorem ipsum dolor sit amet consectetur adipisicing elit. Porro, soluta. Nam in libero unde inventore provident nostrum consectetur cupiditate rerum.',\r\n  },\r\n  {\r\n    id: 'bug-0002',\r\n    description:\r\n      'Lorem ipsum dolor sit amet consectetur adipisicing elit. Porro, soluta. Nam in libero unde inventore provident nostrum consectetur cupiditate rerum.',\r\n  },\r\n  {\r\n    id: 'bug-0003',\r\n    description:\r\n      'Lorem ipsum dolor sit amet consectetur, adipisicing elit. Iure, tempore? Omnis similique ipsum qui fugiat magnam distinctio porro nostrum tenetur voluptatem. Harum quos architecto expedita, numquam inventore non in sit distinctio at quo tempore molestias saepe similique atque, ex maxime!',\r\n  },\r\n  {\r\n    id: 'bug-0004',\r\n    description:\r\n      'Lorem ipsum dolor sit amet consectetur, adipisicing elit. Iure, tempore? Omnis similique ipsum qui fugiat magnam distinctio porro nostrum tenetur voluptatem. Harum quos architecto expedita, numquam inventore non in sit distinctio at quo tempore molestias saepe similique atque, ex maxime!',\r\n  },\r\n  {\r\n    id: 'bug-0005',\r\n    description:\r\n      'Lorem ipsum dolor sit amet consectetur adipisicing elit. Porro, soluta. Nam in libero unde inventore provident nostrum consectetur cupiditate rerum.',\r\n  },\r\n]\r\n\r\nexport const fetchBugs = () => ({\r\n  then: (cb) => new Thenable(cb(bugs)),\r\n})\r\n\r\nclass Thenable {\r\n  then() {}\r\n  catch() {}\r\n}\r\n","import { FETCH_PRODUCTS } from '../constants/action-types'\r\nimport { fetchProducts as fetchProductList } from '../api'\r\n\r\nconst fetchProductsFetching = () => ({\r\n  type: FETCH_PRODUCTS.FETCHING,\r\n})\r\n\r\nconst fetchProductsSuccess = (products) => ({\r\n  type: FETCH_PRODUCTS.SUCCESS,\r\n  payload: {\r\n    data: products,\r\n  },\r\n})\r\n\r\nconst fetchProductsError = (error) => ({\r\n  type: FETCH_PRODUCTS.ERROR,\r\n  payload: {\r\n    error: error,\r\n  },\r\n})\r\n\r\nconst fetchProducts = () => (dispatch) => {\r\n  dispatch(fetchProductsFetching())\r\n\r\n  fetchProductList()\r\n    .then((products) => dispatch(fetchProductsSuccess(products)))\r\n    .catch(() => dispatch(fetchProductsError(\"Couldn't get data :(\")))\r\n}\r\n\r\nexport default fetchProducts\r\n","import { FETCH_PRODUCT_VERSIONS } from '../constants/action-types'\r\nimport { fetchProductVersions as fetchProductVersionList } from '../api'\r\n\r\nconst fetchProductVersionFetching = () => ({\r\n  type: FETCH_PRODUCT_VERSIONS.FETCHING,\r\n})\r\n\r\nconst fetchProductVersionSuccess = (productVersions) => ({\r\n  type: FETCH_PRODUCT_VERSIONS.SUCCESS,\r\n  payload: {\r\n    data: productVersions,\r\n  },\r\n})\r\n\r\nconst fetchProductVersionError = (error) => ({\r\n  type: FETCH_PRODUCT_VERSIONS.ERROR,\r\n  payload: {\r\n    error: error,\r\n  },\r\n})\r\n\r\nconst fetchProductVersions = (productId) => (dispatch) => {\r\n  dispatch(fetchProductVersionFetching())\r\n\r\n  fetchProductVersionList(productId)\r\n    .then((versions) => dispatch(fetchProductVersionSuccess(versions)))\r\n    .catch(() => dispatch(fetchProductVersionError(\"Couldn't get data :(\")))\r\n}\r\n\r\nexport default fetchProductVersions\r\n","import { FETCH_BUGS } from '../constants/action-types'\r\nimport { fetchBugs as fetchBugList } from '../api'\r\n\r\nconst fetchBugsFetching = () => ({\r\n  type: FETCH_BUGS.FETCHING,\r\n})\r\n\r\nconst fetchBugsSuccess = (bugs) => ({\r\n  type: FETCH_BUGS.SUCCESS,\r\n  payload: {\r\n    data: bugs,\r\n  },\r\n})\r\n\r\nconst fetchBugsError = (error) => ({\r\n  type: FETCH_BUGS.ERROR,\r\n  payload: {\r\n    error: error,\r\n  },\r\n})\r\n\r\nconst fetchBugs = (productId, versionId) => (dispatch) => {\r\n  dispatch(fetchBugsFetching())\r\n\r\n  fetchBugList(productId, versionId)\r\n    .then((bugs) => dispatch(fetchBugsSuccess(bugs)))\r\n    .catch(() => {\r\n      dispatch(fetchBugsError(\"Couldn't get data :(\"))\r\n    })\r\n}\r\n\r\nexport default fetchBugs\r\n","import React from 'react'\r\n\r\nconst Spinner = () => (\r\n  <p className='alert alert-light'>Loading...</p>\r\n)\r\n\r\nexport default Spinner\r\n","import React from 'react'\r\n\r\nconst NoInfoAlert = () => (\r\n  <p className='alert alert-light'>No info</p>\r\n)\r\n\r\nexport default NoInfoAlert\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst ErrorAlert = ({ errorText }) => (\r\n  <p className='alert alert-danger'>{errorText}</p>\r\n)\r\n\r\nErrorAlert.propTypes = {\r\n  errorText: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default ErrorAlert\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Spinner from './Spinner'\r\nimport NoInfoAlert from './NoInfoAlert'\r\nimport ErrorAlert from './ErrorAlert'\r\n\r\nconst withDynamicFetching = (WrappedComponent) => {\r\n  const WithDynamicFetching = (props) => {\r\n    const data = props[props.dataListName]\r\n    const { isFetching, error } = props\r\n\r\n    const needToShowLoader = isFetching\r\n    const needToShowData = !isFetching && !error && data.length > 0\r\n    const needToShowNoInfoAlert = !isFetching && !error && data.length === 0\r\n    const needToShowErrorAlert = !!error\r\n\r\n    const wrappedComponentProps = { ...props }\r\n\r\n    delete wrappedComponentProps.dataListName\r\n    delete wrappedComponentProps.isFetching\r\n    delete wrappedComponentProps.error\r\n\r\n    return (\r\n      <>\r\n        {needToShowLoader && <Spinner />}\r\n        {needToShowData && <WrappedComponent {...wrappedComponentProps} />}\r\n        {needToShowNoInfoAlert && <NoInfoAlert />}\r\n        {needToShowErrorAlert && <ErrorAlert errorText={error} />}\r\n      </>\r\n    )\r\n  }\r\n\r\n  const wrappedComponentName =\r\n    WrappedComponent.displayName || WrappedComponent.name || 'Component'\r\n\r\n  WithDynamicFetching.displayName = `WithDynamicFetching(${wrappedComponentName})`\r\n\r\n  WithDynamicFetching.propTypes = {\r\n    dataListName: PropTypes.string.isRequired,\r\n    isFetching: PropTypes.bool.isRequired,\r\n    error: PropTypes.string.isRequired,\r\n  }\r\n\r\n  return WithDynamicFetching\r\n}\r\n\r\nexport default withDynamicFetching\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Product = ({ title, href }) => (\r\n  <li className='list-group-item'>\r\n    <Link className='nav-link p-0' to={href}>\r\n      {title}\r\n    </Link>\r\n  </li>\r\n)\r\n\r\nProduct.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  href: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default Product\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport withDynamicFetching from './WithDynamicFetching'\r\nimport Product from './Product'\r\n\r\nconst ProductList = ({ products }) => (\r\n  <ul className='list-group list-group-flush'>\r\n    {products.map((product) => (\r\n      <Product key={product.id} title={product.title} href={product.href} />\r\n    ))}\r\n  </ul>\r\n)\r\nProductList.propTypes = {\r\n  products: PropTypes.array.isRequired,\r\n}\r\n\r\nexport default withDynamicFetching(ProductList)\r\n","import React, { useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { changeAppTitleToProducts, fetchProducts } from '../actions'\r\nimport ProductList from '../components/ProductList'\r\n\r\nconst ProductListContainer = ({\r\n  changeAppTitleToProducts,\r\n  fetchProducts,\r\n  products,\r\n  isFetching,\r\n  error,\r\n}) => {\r\n  /* eslint \"react-hooks/exhaustive-deps\": \"off\" */\r\n  useEffect(() => changeAppTitleToProducts(), [])\r\n  useEffect(() => fetchProducts(), [])\r\n\r\n  products = products.map((product) => {\r\n    product.href = `/products/${product.id}/versions`\r\n    return product\r\n  })\r\n\r\n  return (\r\n    <ProductList\r\n      dataListName='products'\r\n      products={products}\r\n      isFetching={isFetching}\r\n      error={error}\r\n    />\r\n  )\r\n}\r\n\r\nProductListContainer.propTypes = {\r\n  changeAppTitleToProducts: PropTypes.func.isRequired,\r\n  fetchProducts: PropTypes.func.isRequired,\r\n  products: PropTypes.array.isRequired,\r\n  isFetching: PropTypes.bool.isRequired,\r\n  error: PropTypes.string.isRequired,\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  products: state.products.data,\r\n  isFetching: state.products.isFetching,\r\n  error: state.products.error,\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  changeAppTitleToProducts: () => dispatch(changeAppTitleToProducts()),\r\n  fetchProducts: () => dispatch(fetchProducts()),\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ProductListContainer)\r\n","import { CHANGE_APP_TITLE_TO } from '../constants/action-types'\r\n\r\nexport const changeAppTitleToProducts = () => ({\r\n  type: CHANGE_APP_TITLE_TO.PRODUCTS,\r\n})\r\n\r\nexport const changeAppTitleToVersions = () => ({\r\n  type: CHANGE_APP_TITLE_TO.VERSIONS,\r\n})\r\n\r\nexport const changeAppTitleToBugs = () => ({\r\n  type: CHANGE_APP_TITLE_TO.BUGS,\r\n})\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst ProductVersion = ({ title, href }) => (\r\n  <li className='list-group-item'>\r\n    <Link className='nav-link p-0' to={href}>\r\n      {title}\r\n    </Link>\r\n  </li>\r\n)\r\n\r\nProductVersion.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  href: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default ProductVersion\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport withDynamicFetching from './WithDynamicFetching'\r\nimport ProductVersion from './ProductVersion'\r\n\r\nconst ProductVersionList = ({ versions }) => (\r\n  <ul className='list-group list-group-flush'>\r\n    {versions.map((version) => (\r\n      <ProductVersion\r\n        key={version.id}\r\n        title={version.title}\r\n        href={version.href}\r\n      />\r\n    ))}\r\n  </ul>\r\n)\r\n\r\nProductVersionList.propTypes = {\r\n  versions: PropTypes.array.isRequired,\r\n}\r\n\r\nexport default withDynamicFetching(ProductVersionList)\r\n","import React, { useEffect } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { changeAppTitleToVersions, fetchProductVersions } from '../actions'\r\nimport ProductVersionList from '../components/ProductVersionList'\r\n\r\nconst ProductVersionListContainer = ({\r\n  changeAppTitleToVersions,\r\n  fetchProductVersions,\r\n  versions,\r\n  isFetching,\r\n  error,\r\n}) => {\r\n  const { productId } = useParams()\r\n\r\n  /* eslint \"react-hooks/exhaustive-deps\": \"off\" */\r\n  useEffect(() => changeAppTitleToVersions(), [])\r\n  useEffect(() => fetchProductVersions(productId), [productId])\r\n\r\n  versions = versions.map((version) => {\r\n    version.href = `/products/${productId}/versions/${version.id}/bugs`\r\n    return version\r\n  })\r\n\r\n  return (\r\n    <ProductVersionList\r\n      dataListName='versions'\r\n      versions={versions}\r\n      isFetching={isFetching}\r\n      error={error}\r\n    />\r\n  )\r\n}\r\n\r\nProductVersionListContainer.propTypes = {\r\n  changeAppTitleToVersions: PropTypes.func.isRequired,\r\n  fetchProductVersions: PropTypes.func.isRequired,\r\n  versions: PropTypes.array.isRequired,\r\n  isFetching: PropTypes.bool.isRequired,\r\n  error: PropTypes.string.isRequired,\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  versions: state.productVersions.data,\r\n  isFetching: state.productVersions.isFetching,\r\n  error: state.productVersions.error,\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  changeAppTitleToVersions: () => dispatch(changeAppTitleToVersions()),\r\n  fetchProductVersions: (productId) =>\r\n    dispatch(fetchProductVersions(productId)),\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ProductVersionListContainer)\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Bug = ({ title, description }) => (\r\n  <li className='list-group-item'>\r\n    <h5>{title}</h5>\r\n    <p>{description}</p>\r\n  </li>\r\n)\r\n\r\nBug.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  description: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default Bug\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport withDynamicFetching from './WithDynamicFetching'\r\nimport Bug from './Bug'\r\n\r\nconst BugList = ({ bugs }) => (\r\n  <ul className='list-group list-group-flush'>\r\n    {bugs.map((bug) => (\r\n      <Bug key={bug.id} title={bug.id} description={bug.description} />\r\n    ))}\r\n  </ul>\r\n)\r\n\r\nBugList.propTypes = {\r\n  bugs: PropTypes.array.isRequired,\r\n}\r\n\r\nexport default withDynamicFetching(BugList)\r\n\r\n","import React, { useEffect } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { changeAppTitleToBugs, fetchBugs } from '../actions'\r\nimport BugList from '../components/BugList'\r\n\r\nconst BugListContainer = ({\r\n  changeAppTitleToBugs,\r\n  fetchBugs,\r\n  bugs,\r\n  isFetching,\r\n  error,\r\n}) => {\r\n  const { productId, versionId } = useParams()\r\n\r\n  /* eslint \"react-hooks/exhaustive-deps\": \"off\" */\r\n  useEffect(() => changeAppTitleToBugs(), [])\r\n  useEffect(() => fetchBugs(productId, versionId), [productId, versionId])\r\n\r\n  return (\r\n    <BugList\r\n      dataListName='bugs'\r\n      bugs={bugs}\r\n      isFetching={isFetching}\r\n      error={error}\r\n    />\r\n  )\r\n}\r\n\r\nBugListContainer.propTypes = {\r\n  changeAppTitleToBugs: PropTypes.func.isRequired,\r\n  fetchBugs: PropTypes.func.isRequired,\r\n  bugs: PropTypes.array.isRequired,\r\n  isFetching: PropTypes.bool.isRequired,\r\n  error: PropTypes.string.isRequired,\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  bugs: state.bugs.data,\r\n  isFetching: state.bugs.isFetching,\r\n  error: state.bugs.error,\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  changeAppTitleToBugs: () => dispatch(changeAppTitleToBugs()),\r\n  fetchBugs: (productId, versionId) =>\r\n    dispatch(fetchBugs(productId, versionId)),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(BugListContainer)\r\n","import React, { useEffect } from 'react'\r\nimport { Switch, Route, Redirect, useHistory } from 'react-router-dom'\r\nimport withNavigation from './WithNavigation'\r\nimport ProductList from './ProductList'\r\nimport ProductVersionList from './ProductVersionList'\r\nimport BugList from './BugList'\r\n\r\nconst ProductListWithNavigation = withNavigation(ProductList)\r\nconst ProductVersionListWithNavigation = withNavigation(ProductVersionList)\r\nconst BugListWithNavigation = withNavigation(BugList)\r\n\r\nconst ContentContainer = () => {\r\n  const history = useHistory()\r\n\r\n  // eslint-disable-next-line\r\n  useEffect(() => history.push('/'), [])\r\n\r\n  return (\r\n    <Switch>\r\n      <Route exact path='/'>\r\n        <ProductListWithNavigation />\r\n      </Route>\r\n      <Route exact path='/products/:productId/versions'>\r\n        <ProductVersionListWithNavigation />\r\n      </Route>\r\n      <Route exact path='/products/:productId/versions/:versionId/bugs'>\r\n        <BugListWithNavigation />\r\n      </Route>\r\n      <Route path='*'>\r\n        <Redirect to='/' />\r\n      </Route>\r\n    </Switch>\r\n  )\r\n}\r\n\r\nexport default ContentContainer\r\n","import React, { useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport Header from './containers/Header'\nimport Content from './containers/Content'\n\nconst BugboardApp = ({ appTitle }) => {\n  useEffect(() => (document.title = appTitle), [appTitle])\n\n  return (\n    <div className='container'>\n      <Header />\n      <Content />\n    </div>\n  )\n}\n\nBugboardApp.propTypes = {\n  appTitle: PropTypes.string.isRequired,\n}\n\nconst mapStateToProps = (state) => ({\n  appTitle: state.appTitle,\n})\n\nexport default connect(mapStateToProps)(BugboardApp)\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { ConnectedRouter } from 'connected-react-router'\nimport { Provider as StoreProvider } from 'react-redux'\nimport store, { history } from './store'\nimport './index.css'\nimport Bugboard from './BugboardApp'\n\nReactDOM.render(\n  <React.StrictMode>\n    <StoreProvider store={store}>\n      <ConnectedRouter history={history}>\n        <Bugboard />\n      </ConnectedRouter>\n    </StoreProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}